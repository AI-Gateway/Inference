/*
 * MAPER Tecnologia SRL ("MAPER") CONFIDENTIAL
 * Unpublished Copyright (c) 2019-2020 Maper Tecnologia SRL, All Rights Reserved.
 *
 * NOTICE: All information contained herein is, and remains the property of MAPER. The intellectual and technical
 * concepts contained herein are proprietary to MAPER and may be covered by U.S. and Foreign Patents, patents in
 * process, and are protected by trade secret or copyright law. Dissemination of this information or reproduction of
 * this material is strictly forbidden unless prior written permission is obtained from MAPER. Access to the source code
 * contained herein is hereby forbidden to anyone except current MAPER employees, managers or contractors who have
 * executed Confidentiality and Non-disclosure agreements explicitly covering such access.
 *
 * The copyright notice above does not evidence any actual or intended publication or disclosure of this source code,
 * which includes information that is confidential and/or proprietary, and is a trade secret, of MAPER. ANY
 * REPRODUCTION, MODIFICATION, DISTRIBUTION, PUBLIC PERFORMANCE, OR PUBLIC DISPLAY OF OR THROUGH USE OF THIS SOURCE CODE
 * WITHOUT THE EXPRESS WRITTEN CONSENT OF MAPER IS STRICTLY PROHIBITED, AND IN VIOLATION OF APPLICABLE LAWS AND
 * INTERNATIONAL TREATIES. THE RECEIPT OR POSSESSION OF THIS SOURCE CODE AND/OR RELATED INFORMATION DOES NOT CONVEY OR
 * IMPLY ANY RIGHTS TO REPRODUCE, DISCLOSE OR DISTRIBUTE ITS CONTENTS, OR TO MANUFACTURE, USE, OR SELL ANYTHING THAT IT
 * MAY DESCRIBE, IN WHOLE OR IN PART.
 */

syntax = "proto2";

enum TYPE {
    TYPE_UNKNOWN     = 0;
    VIBRATION_VECTOR = 1;
    CURRENT_VECTOR   = 2;
    TEMPERATURE      = 3;
    MACHINE_ON       = 4;
    MACHINE_OFF      = 5;
    /* 6-11 reserved for iot-hub */
    VIBRATION_RMS    = 12;
    CURRENT_RMS      = 13;
}

enum CHANNEL {
    CHANNEL_UNKNOWN = 0x00;
    X               = 0x01;  // Vibration X direction
    Y               = 0x02;  // Vibration Y direction
    Z               = 0x04;  // Vibration Z direction
}

enum FREQ {
    FREQ_UNKNOWN = 0;
    HZ_50        = 1;
    HZ_100       = 2;
    HZ_200       = 3;
    HZ_400       = 4;
    HZ_800       = 5;
    HZ_1600      = 6;
    HZ_3200      = 7;
    HZ_6400      = 8;
    HZ_12800     = 9;
    HZ_25600     = 10;
}

enum RANGE {
    RANGE_UNKNOWN = 0;
    G_2           = 1;
    G_4           = 2;
    G_8           = 3;
    G_16          = 4;
    G_32          = 5;
    G_64          = 6;
}

enum ERROR_TYPE {
    ERROR_NONE    = 0;
    NO_BUFS       = 1;
    INVALID_CONF  = 2;
    COMMUNICATION = 3;
}

enum ACCELEROMETER {
    ACCELEROMETER_UNKNOWN = 0;
    KX13x                 = 1;
    KX132                 = 2;
    KX124                 = 3;
}
